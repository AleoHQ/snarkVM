version: 2.1
commands:
  setup_environment:
    description: "Setup testing environment"
    parameters:
      cache_key:
        type: string
        default: snarkvm-stable-cache
    steps:
      - run: set -e
      - setup_remote_docker
      - run:
          name: Prepare environment and install dependencies
          command: |
            export SCCACHE_CACHE_SIZE=200M
            export WORK_DIR="$CIRCLE_WORKING_DIRECTORY/.cache/sccache"
            export SCCACHE_DIR="$CIRCLE_WORKING_DIRECTORY/.cache/sccache"
            mkdir -p "$CIRCLE_WORKING_DIRECTORY/.bin"
            wget https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
            tar -C "$CIRCLE_WORKING_DIRECTORY/.bin" -xvf sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
            mv $CIRCLE_WORKING_DIRECTORY/.bin/sccache-0.2.13-x86_64-unknown-linux-musl/sccache $CIRCLE_WORKING_DIRECTORY/.bin/sccache
            export PATH="$PATH:$CIRCLE_WORKING_DIRECTORY/.bin"
            export RUSTC_WRAPPER="sccache"
            rm -rf "$CIRCLE_WORKING_DIRECTORY/.cargo/registry"
            sudo apt-get update && sudo apt-get install -y clang llvm-dev llvm pkg-config xz-utils make libssl-dev libssl-dev
      - restore_cache:
          keys:
            - << parameters.cache_key >>
  clear_environment:
    description: "Clear environment"
    parameters:
      cache_key:
        type: string
        default: snarkvm-stable-cache
    steps:
      - run: (sccache -s||true)
      - run: set +e
      - save_cache:
          key: << parameters.cache_key >>
          paths:
            - .cache/sccache
            - .cargo
jobs:

  rust-stable:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: 2xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-stable-cache
      - run:
          name: Build and run tests
          no_output_timeout: 60m
          command: RUST_MIN_STACK=8388608 cargo test --all
      - persist_to_workspace:
          root: ~/
          paths: project/
      - clear_environment:
          cache_key: snarkvm-stable-cache

  codecov:
    machine:
      image: ubuntu-1604:202004-01
      docker_layer_caching: true
    resource_class: 2xlarge
    steps:
      - attach_workspace:
          at: /home/circleci/project/
      - run:
          name: Run kcov
          command: >
            cd ~/project/project/ &&
            docker run --security-opt seccomp=unconfined -v ~/project/project/:/home/circleci/project/
            howardwu/snarkos-codecov:2021-03-25 bash /home/circleci/project/.resources/kcov.sh
      - run: cd ./project/ && bash <(curl -s https://codecov.io/bash)

  rust-nightly:
    docker:
      - image: howardwu/snarkos-ci:2021-03-25
    resource_class: 2xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-nightly-cache
      - run:
          name: Build and test
          no_output_timeout: 60m
          command: RUST_MIN_STACK=8388608 cargo test --all
      - clear_environment:
          cache_key: snarkvm-nightly-cache

  snarkvm-algorithms:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-algorithms-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd algorithms && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-algorithms-cache

  snarkvm-curves:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-curves-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd curves && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-curves-cache

  snarkvm-derives:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-derives-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd derives && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-derives-cache

  snarkvm-dpc:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-dpc-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd dpc && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-dpc-cache

  snarkvm-fields:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-fields-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd fields && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-fields-cache

  snarkvm-gadgets:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-gadgets-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd gadgets && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-gadgets-cache

  snarkvm-marlin:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-marlin-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd marlin && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-marlin-cache

  snarkvm-parameters:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-parameters-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd parameters && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-parameters-cache

  snarkvm-polycommit:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-polycommit-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd polycommit && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-polycommit-cache

  snarkvm-posw:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-posw-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd posw && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-posw-cache

  snarkvm-profiler:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-profiler-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd profiler && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-profiler-cache

  snarkvm-r1cs:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-r1cs-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd r1cs && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-r1cs-cache

  snarkvm-utilities:
    docker:
      - image: cimg/rust:1.53.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-utilities-cache
      - run:
          name: Build and run tests
          no_output_timeout: 35m
          command: cd utilities && RUST_MIN_STACK=8388608 cargo test
      - clear_environment:
          cache_key: snarkvm-utilities-cache

workflows:
  version: 2
  main-workflow:
    jobs:
      - rust-stable
      - rust-nightly
      - codecov:
          requires:
            - rust-stable
      - snarkvm-algorithms
      - snarkvm-curves
      - snarkvm-derives
      - snarkvm-dpc
      - snarkvm-fields
      - snarkvm-gadgets
      - snarkvm-marlin
      - snarkvm-parameters
      - snarkvm-polycommit
      - snarkvm-posw
      - snarkvm-profiler
      - snarkvm-r1cs
      - snarkvm-utilities
